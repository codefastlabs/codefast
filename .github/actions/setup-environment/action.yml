name: "Setup Node.js and pnpm Environment"
description: "Sets up Node.js, pnpm, and project dependencies with caching for efficient CI/CD builds"
author: "thevuong"

inputs:
  node-version:
    description: "Node.js version to use"
    default: "22"
    required: false

  package-manager-version:
    description: "Version of pnpm to install"
    required: false

  install-dependencies:
    description: "Whether to install dependencies"
    default: "true"
    required: false

  install-options:
    description: "Additional options for pnpm install"
    default: "--prefer-offline --frozen-lockfile"
    required: false

  registry-url:
    description: "npm registry URL to use"
    default: "https://registry.npmjs.org"
    required: false

  enable-remote-cache:
    description: "Whether to enable Turborepo remote caching"
    default: "true"
    required: false

outputs:
  turbo-cache-hit:
    description: "Whether Turborepo cache was hit"
    value: ${{ steps.turbo-cache.outputs.cache-hit }}

runs:
  using: "composite"
  steps:
    - name: "Setup Turborepo Cache"
      id: turbo-cache
      uses: actions/cache@v4
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: ${{ runner.os }}-turbo-

    - name: "Set Up pnpm Package Manager"
      id: pnpm-setup
      uses: pnpm/action-setup@v4
      with:
        version: ${{ inputs.package-manager-version }}
        run_install: false

    - name: "Set Up Node.js Environment"
      id: node-setup
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.registry-url }}
        cache: "pnpm"

    - name: "Configure NPM auth token"
      id: npm-auth-config
      shell: bash
      if: ${{ env.NPM_TOKEN != '' }}
      run: |
        REGISTRY="${{ inputs.registry-url }}"
        REGISTRY_HOST=$(echo $REGISTRY | sed -E 's#^https?://##')
        npm config set //$REGISTRY_HOST/:_authToken ${NPM_TOKEN}

    - name: "Install Project Dependencies (pnpm)"
      id: pnpm-install
      shell: bash
      if: ${{ inputs.install-dependencies == 'true' }}
      run: pnpm install ${{ inputs.install-options }}
      env:
        SKIP_INSTALL_SIMPLE_GIT_HOOKS: true

    - name: "Verify Turborepo Remote Caching Setup"
      id: turbo-remote-cache
      shell: bash
      if: ${{ inputs.enable-remote-cache == 'true' && env.TURBO_TOKEN != '' && env.TURBO_TEAM != '' }}
      run: |
        echo "Turborepo Remote Caching is enabled for team: $TURBO_TEAM"
        npx turbo --version
