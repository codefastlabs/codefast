name: Publish Package Releases

on:
  push:
    branches:
      - main
      - canary
    paths:
      - ".github/workflows/release.yml"
      - "packages/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  verify-code:
    name: Verify Code Integrity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup CI Environment
        uses: ./.github/actions/setup-environment

      - name: Build, Lint, and Run Tests
        run: npx turbo build lint test:coverage:ci --filter="./packages/**"
        env:
          NODE_ENV: production
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Upload Test Coverage Reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: codefastlabs/codefast
          fail_ci_if_error: false

  canary-release:
    name: Publish Canary Release
    if: github.ref == 'refs/heads/canary'
    runs-on: ubuntu-latest
    needs:
      - verify-code
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup CI Environment
        uses: ./.github/actions/setup-environment
        with:
          install-dependencies: "true"

      - name: Build Packages
        run: npx turbo build --filter="./packages/**"
        env:
          NODE_ENV: production
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Configure Git User
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Check and Enter Canary Pre-Release Mode
        run: |
          if find .changeset -maxdepth 1 -type f -name "*.md" ! -name "README.md" | grep -q .; then
            if [ -f .changeset/pre.json ]; then
              echo "pre.json exists, continuing in pre-release mode."
            else
              echo "Changesets found, entering canary pre-release mode."
              npx changeset pre enter canary
              git add .
              git commit -m "chore: enter canary pre-release mode" || echo "No changes to commit"
            fi
          else
            echo "No changesets found, skipping pre-release mode."
          fi

      - name: Publish Canary Releases
        uses: changesets/action@v1
        with:
          version: npx changeset version
          publish: npx changeset publish
          commit: "chore: update versions for canary release"
          title: "chore: update canary versions"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  production-release:
    name: Publish Production Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - verify-code
    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup CI Environment
        uses: ./.github/actions/setup-environment

      - name: Build Packages
        run: npx turbo build --filter="./packages/**"
        env:
          NODE_ENV: production
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      - name: Configure Git User
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Exit Pre-Release Mode
        run: |
          if [ -f .changeset/pre.json ]; then
            echo "Exiting pre-release mode."
            npx changeset pre exit
            git add .
            git commit -m "chore: exit canary pre-release mode" || echo "No changes to commit"
          fi

      - name: Publish Production Releases
        id: changesets
        uses: changesets/action@v1
        with:
          version: npx changeset version
          publish: npx changeset publish
          commit: "chore: update versions for release"
          title: "chore: release new version"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  sync-branches:
    name: Sync Main to Canary
    if: github.ref == 'refs/heads/main' && needs.production-release.outputs.published == 'true'
    runs-on: ubuntu-latest
    needs: [production-release]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup CI Environment
        uses: ./.github/actions/setup-environment

      - name: Configure Git User
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Sync Main to Canary
        run: |
          # Create sync branch and update
          git checkout -b sync-main-to-canary-${{ github.run_id }}
          git merge main --no-ff -m "chore: sync main into canary after release"

          # Restore canary mode if needed
          if find .changeset -maxdepth 1 -type f -name "*.md" ! -name "README.md" | grep -q .; then
            if [ ! -f .changeset/pre.json ]; then
              echo "Restoring canary pre-release mode."
              npx changeset pre enter canary
              git add .
              git commit -m "chore: restore canary pre-release mode" || echo "No changes to commit"
            fi
          fi

          # Push and create PR
          git push origin sync-main-to-canary-${{ github.run_id }}
          gh pr create \
            --base canary \
            --head sync-main-to-canary-${{ github.run_id }} \
            --title "chore: sync main into canary after release" \
            --body "Auto-generated PR to sync main into canary after successful release."
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
