name: Vercel Deployments

on:
  push:
    branches:
      - main
      - canary
    paths:
      - ".github/workflows/deploy.yml"
      - "apps/**"
      - "packages/**"
  pull_request:
    branches:
      - main
      - canary
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - ".github/workflows/deploy.yml"
      - "apps/**"
      - "packages/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read # to check out code
  issues: write # to create a comment on a PR
  pull-requests: write # to create a comment on a PR

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup CI Environment
        uses: ./.github/actions/setup-environment

      - name: Install and Configure Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Deploy Production to Vercel
        if: github.ref == 'refs/heads/main'
        run: vercel deploy --archive=tgz --token=${{ secrets.VERCEL_TOKEN }} --prod
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy Preview to Vercel
        if: github.ref != 'refs/heads/main'
        run: |
          DEPLOY_URL=$(vercel deploy --archive=tgz --token=${{ secrets.VERCEL_TOKEN }})
          echo "Preview URL: $DEPLOY_URL"
          echo "PREVIEW_URL=$DEPLOY_URL" >> $GITHUB_ENV
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Post Deployment Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `üöÄ Preview deployment is ready! \n\nüîç Preview URL: ${process.env.PREVIEW_URL}`
            });
