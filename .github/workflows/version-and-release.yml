name: Version and Release Packages

on:
  push:
    branches: [develop, release/*, hotfix/*, main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'
  pull_request:
    branches: [develop, release/*, hotfix/*, main]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.editorconfig'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  SKIP_INSTALL_SIMPLE_GIT_HOOKS: true

jobs:
  setup:
    name: Setup & Validation
    runs-on: ubuntu-latest
    outputs:
      ui_changed: ${{ steps.filter.outputs.ui }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for Changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            ui:
              - 'packages/*/src/**/*.{js,jsx,ts,tsx,css,scss}'
              - 'apps/storybook-docs/**'
              - '**/tailwind.config.{js,ts}'
              - '**/*.stories.{js,jsx,ts,tsx}'
              - '**/styles/**'

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Lint
        run: pnpm lint

  test:
    name: Test
    needs: [setup, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Tests
        run: pnpm test

  chromatic:
    name: Visual Testing
    needs: [setup, lint]
    if: |
      needs.setup.outputs.ui_changed == 'true' &&
      (github.event_name == 'pull_request' || github.ref == 'refs/heads/main') &&
      !contains(github.event.head_commit.message, '[skip-visual]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/storybook-docs
          onlyChanged: true
          zip: true
          exitZeroOnChanges: ${{ github.event_name != 'pull_request' }}

  release:
    name: Release
    needs: [test]
    if: |
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, '[skip-release]')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Create Release
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          commit: 'chore(release): publish v${{ steps.version.outputs.version }}'
          title: 'chore(release): version packages'
          publish: pnpm changeset:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify Team
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { status } = context.job
            const emoji = status === 'success' ? '✅' : '❌'
            const message = `${emoji} Release workflow completed with status: ${status}`

            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: message
            })
